## ===========================================================================
## wizd.conf
## wizd -- MediaWiz Server Daemon.  config file.
## ===========================================================================



## ==============================
## = HTTP 処理部 設定
## ==============================


## メディアファイル置き場
document_root           /



## サーバ待ち受けPort (default:8000)
server_port             8000



## IPアクセス制御(32行まで)
##  指定されたアドレスからのアクセスのみ許可する。
##  指定がなければ全部許可
#access_allow   192.168.0.0/255.255.255.0
#access_allow   192.168.1.0/255.255.255.0



## User-Agentアクセス制御 許可指定(32行まで)
##  指定すると、User-Agentに 指定された文字列が含まれているとアクセス可能。
##  指定がなければ全部許可
#allow_user_agent       Syabas
#allow_user_agent       Mozilla



## ===================================
## =  表示部 設定
## ===================================

## MediaWizの表示コード
## <<注意>> MediaWiz側の表示文字コード設定です。
##          MediaWizの設定を変えてないならいじるな!!
##
##     シフトJIS:sjis  (default)
##     EUC:      euc
client_language_code    sjis



## サーバ側(OS側)の文字コード設定
## <<注意>> こっちがServer側(OS側)の文字コード設定です。
##          UTF-8問題で困ってないならいじるな!!
##
##      自動判定:  auto         (default)
##      シフトJIS: sjis         (非推奨. auto使え)
##      EUC:       euc          (非推奨. auto使え)
##      UTF-8      utf8         (MacOSX / Fedoraの人はコレ推奨)
##      UTF-16     utf16        (未テスト. 動くか不明)
server_language_code    auto



## スキン 
##     使用する:true    
##     使用しない:false (default)
flag_use_skin           true


## スキンデータ置き場
##  init起動するなら、フルパス指定に変えないと不具合が出ます。
##
skin_root               ./skin
#skin_root              /usr/local/wizd/skin


## スキン名 (skin_rootにあるディレクトリ名)
##
#skin_name               default
#skin_name              sample
skin_name              basicblue



## メニューでのファイルソートのルール設定
##      しない          none    (default)
##      名称(昇順)      name_up
##      名称(降順)      name_down
##      日付(昇順)      time_up
##      日付(降順)      time_down
##      サイズ(昇順)    size_up
##      サイズ(降順)    size_down
sort_rule       name_up


## メニュー画面の、１ページの行数。
## (default: 14)
page_line_max   14


## 表示ファイル名のMAX長[byte] (拡張子除く)
##      default:制限無し
#menu_filename_length_max       40


## sambaのCAP/HEXエンコード使用するかフラグ
## ":a2:97:b7:97:a7:82:bf:a3.avi" のように表示される時、使用してください。
## [注] "server_language_code auto" で使用すること
##
##      使用する        true
##      使用しない      false(default)
#flag_decode_samba_hex_and_cap          true


## wizd が知らない拡張子のファイルを隠すかフラグ
##    隠す      true        (default)
##    隠さない  false 
flag_unknown_extention_file_hide        true


## 表示ファイル名で、()[]に囲まれた部分を削除するかフラグ。
## (削除対象は半角括弧のみ)
##  [例]  "名作ドラマ[DivX5.05](2).avi" → "名作ドラマ.avi"
##    削除する    true
##    削除しない  false (default)
#flag_filename_cut_parenthesis_area     true


## 表示ファイル名で、親ディレクトリ名と同一文字列を削除するかフラグ
##  [例]  "/名作ドラマ/名作ドラマ 第１話.avi" → "第１話.avi"
##    削除する    true
##    削除しない  false (default)
#flag_filename_cut_same_directory_name  true


## Allplayでの文字化け防止(ファイル名の全半角変換)するかフラグ
## [注] 旧版のMediaWizファームは、tureにしないと化ける。新版はfalseでOK
##    使用する    true
##    削除しない  false(default)
flag_allplay_filelist_adjust	false


## 隠しディレクトリ
##  wizd で表示しないディレクトリ名を指定。4つまで。
##  パス指定不可。ディレクトリ名称のみ。
##  日本語ディレクトリ名は保証しない。英語にリネームするべし。
##
## secret_directory ディレクトリ名  TVID(3桁までの数値)
##
## の形式で指定する。
## 指定された名称のディレクトリは、メニューでは表示されない。
## 隠しディレクトリが存在する場所で、TVIDを直接入力することにより、
## 移動可能になる。
##
## ※ ブラウザでアクセスされてHTMLソース見られると一発でバレます。運用注意。
##
## secret_directory ディレクトリ名  TVID(3桁までの数値)
#secret_directory       ero_movie       988
#secret_directory       ero_gazou       989


## ---------------------------
## - SVI表示処理 設定
## ---------------------------

## SVIファイルと同一の名前を持つディレクトリを隠すかフラグ
##      隠す            true 
##      隠さない        false(default)
flag_hide_same_svi_name_directory       false
#flag_hide_same_svi_name_directory       true


## SVIファイル情報表示のMAX長(byte)
##      default: 制限無し
#menu_svi_info_length_max       100


## ================================
## = 自動検出(SSDP処理)部 設定
## ================================

## 自動検出 
##    する:true  (default)
##    しない:false
flag_auto_detect        true


## 自動検出で登録されるサーバ名
##   標準ではhost名が使用される。
##   指定したいときは下記に定義して下さい。
##
#server_name            Linux


## SSDPパケットを監視させるホストIPアドレス。
##    サーバが、複数のホストIPを持っている場合、
##    MediaWizがあるセグメントのホストIPを指定してください。
##    Default: 全部監視
#auto_detect_bind_ip_address    192.168.0.200



## ============================
## = システム系
## ============================

## daemon化
##  する:true  (default)
##  しない:false
#flag_daemon             false


## 実行user/group 設定
##  wizdが動作するUserIDを指定できる。root起動した時のみ有効。
##  Default: なにもしない
#exec_user              wizd
#exec_group             wizd


## DebugLog 出力
##   出力する:true 
##   出力しない:false (default)
#flag_debug_log_output  true


## DebugLog 出力ファイル名
##  default: /tmp/wizd_debug.log
##
#debug_log_filename     /dev/tty
#debug_log_filename     /tmp/wizd_debug.log


## ============================
## = その他、改造版用
## ============================

## wizd は 知らないオプションを無視するので、改造版とオリジナル版のwizdを
## 使い分けるときも、この設定ファイルはそのまま使えます


## 読み込みキャッシュバッファのブロック数
##  ディスク/プロクシからの読み込みの際に使うキャッシュバッファのブロック数
##  ブロック1つは 10240バイト(10KB)で、ここでその個数を変更できる
##  組み込み向け等でメモリが少ないときは少なくした方が良い
##  キャッシュを持ったブロックが 全ブロック数の 1/4 貯まれば再生を始める
##  wizdオリジナル版と同程度にするには、13 ぐらい。
##  Default: 1024 (個, = 1024 * 10240 B = 10240 KB = 10MB)
#buffer_size	500
#buffer_size	64


## キャッシュをすぐに送るかどうかのフラグ(default: false)
##  Trueにすると、キャッシュバッファの1ブロックに読み込めた分だけを
##  すぐに送ろうとする
##  (プロクシ利用時は特に、お薦めしない)
##
##  [利点]
##      バッファブロック数が早く貯まるので
##      ・プロクシ利用時に再生までの待ち時間が比較的少なくなる
##  [欠点]
##      1つのバッファブロックをすべて使うわけではないので
##      ・プロクシ利用時にすぐにバッファを使い果たす可能性が高くなる
##      ・キャッシュを非効率的に使うことになる
##
#flag_buffer_send_asap	true


## UserAgent の上書き
##  指定されていると、プロクシ動作時にこのUserAgentを使う(1つだけ)
##  default: なし
#user_agent_proxy_override	Syabas/03-84-031224-08-VTL-102-000/08-VTL (uCOS-II v2.05;NOS;KA9Q; 624x416,HiColor; www.syabas.com)
#user_agent_proxy_override	Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)


## 一度に受け付けるクライアント数
##  指定されていると、一度に接続できるクライアントの数を制限できる
##  wizdは、各クライアントに対して fork() を実行するので、
##  組み込みLinuxなどで fork() が深刻な事態を招くときに指定するのが良い。
##  詳しくはreadme_altered.txtを…。
##  default: 0 (制限なし)
#max_child_count	2


## CGIスクリプトの実行を許可するかフラグ
##    する:true  (default)
##    しない:false
#flag_execute_cgi	false


## CGIスクリプトの標準エラーの出力先
# 動作がおかしいときは ファイルに出力して確かめてみるべし。
# default: /dev/null
#debug_cgi_output     /dev/tty
#debug_cgi_output     /tmp/wizd_cgi_debug.log


## プロクシを許可するかフラグ
##    する:true  (default)
##    しない:false
#flag_allow_proxy	false


## PCかどうかを判断する User-Agent
# この User-Agent に先頭一致するクライアントはPCとして扱われる。一つのみ。
# default: なし
#user_agent_pc	Mozilla

## HTTP Basic認証
# 必ず user:password の形式で記述
# User-Agent に合致しない場合でも、このパスワードを確認するとアクセスを許可。
# (注意、仕様変更の可能性あり)
#http_passwd  wizd:hoge

## Windows用にプレイリスト内のファイル名を調整するかフラグ
##  指定したときには、パス区切りの'\'を'/'に変更し、case insensitiveな指定にも対応
##  漢字コードとしてはsjisを想定しているので、他の文字コードでは誤動作する
##      行う            true
##      行わない        false(default)
#flag_filename_adjustment_for_windows       true


## ===========================================================================
## = wizd -- end of config file.
## ===========================================================================
