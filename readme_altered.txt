***************************************************************************
はじめに
***************************************************************************
これは、685氏製作の MediaWiz用のサーバである wizd を勝手に改造したものです。
当方は如何なる動作の保証も致しません。
このソフトウェアについて、(株)バーテックス リンク社に問い合わせないでください。
このソフトウェアを使用し、いかなる損害を受けたとしても、一切の保証は致しません。
すべて自己責任で使用してください。

配布条件等は基本的にオリジナルwizdに従いますが、
本ソフトウェアは特定個人が不健全な行為によって儲けるために作っているわけではありません。
例えば、中古屋やオークションでこのソフトを売りつけたりしないでください。
また、プレイヤー等と抱きあわせて販売するなとは言いませんが、そのような商業利用をする場合には、サポートその他一切の責任はすべてそちら側でとってください。
# それすら守れない奴は使うな!


再配布の際はできる限りドキュメント類は残してください。

readme のファイル構成
readme.txt          : wizd 0.12 (オリジナル)に付属していた説明書です。
readme2.txt         : wizd 0.12da に付属していた説明書です。
readme12f3_f4.txt   : wizd 0.12f4 に付属していた説明書です。
readme_gr.txt       : wizd 0.12gr に付属していた説明書です。(たぶん)
readme_altered.txt  : wizd 改造版 の説明書です。(このファイル)

***************************************************************************
謝辞
***************************************************************************
 685氏がwizdを作成してくれなければ、この改造も当然ながら存在していません。
こんなすばらしいソフトを作り無償で公開してくれた原作者様に、これほどかってぐらい感謝です。

 AX10USER氏がいなければ、私はMediaWizについてもwizdについてもAX10についても知らなかったでしょう。
wizd におけるSVI関係のほとんどは氏の情報によるものです。一部に氏のコードも混じっているはずです。
また、不具合の調査など、SVI関係は特に念入りに 毎回 AX10での動作確認もしてもらいました。
めちゃめちゃ感謝です。

 wizd 改造版 0.12e にて、gigo さんのとこで見つけた wizd 0.12da を完全に取り込みました。
Ozekiさんが 私の wizd 改造版 0.12d と VOB連結パッチ をマージしてくれたそうです。ありがとうございます。
詳細は readme2.txt に書いてあります。

 wizd 改造版 0.12g にて、wizd 0.12f4 を完全に取り込みました。
0.12f4の作者さんは AX300スレ その4の 943氏かな。勝手にマージさせていただきました。御了承ください…。そして、ありがとうございます。
詳細は readme12f3_f4.txt に書いてあります。

 wizd 改造版 0.12h にて、JPEGのリサイズを取り込みました。感謝です。

 basicblueというすばらしいスキンを作ってくれた作者様(237氏)に、改めて感謝です。

 その他、このソフトを作り上げるのに協力してくれたすべての人に感謝します。

***************************************************************************
既知の不具合
***************************************************************************
・http_passwdを使っている際、Proxyとして使うための認証と、Proxyでアクセスしている先の認証とをうまく扱えない。
・HTTP認証のrealm が "dummy" ....
・プレイリストの内部実装で、plw付近がまだ共通化できていない。
 (でも、一応ファイル数制限は無くなってる予定)

***************************************************************************
変更履歴
***************************************************************************
☆ wizd 0.12h RC3 (ごめんなさい、gt版のマージがまだです... ちと挫折気味...)
・JPEGのリサイズ対応に伴いスキンの内部実装の大幅改訂。
  - SETCONFに書き換えたり、wizd_skin.*作ったり。いろいろ。
  - バグってないか注意して観察しておいてくれるとうれしいです。
  - でも、さらに大改造を狙いつつ… 頓挫中…。
・とりあえず quick-hack で skin/ の .cgi を動作対象に。
・この時点のnkfは、2.04のCVS最新版(2.0.4 2005-01-24版)
・デフォルトで読み込むwizd.confの場所の追加。(と、メンテしやすく)
・wizd.conf に flag_read_mp3_tag 追加。(実験)
・inetdで動くようにしてみる。(make wizd_inetd : 実験)
・wizd.conf に wizd_chdir 追加。(inetd版用。実験)
・JPEGリサイズをaction=Resize.jpgに変更。
・JPEGリサイズで、元絵が小さいときは、小さいままアスペクト比だけ変換。
・skinディレクトリでもcgi可能に。(実験)
・キャッシュが溜まりにくいときでも、13秒したら送り始めるように変更。
  - MediaWizのタイムアウト「13秒(憶測)」をハードコードしちった…。要変更。
---------------------------------------------------------------------------
☆ wizd 0.12h RC2 (ごめんなさい、gt版のマージがまだです... だから RC。非公開)
・勢いでCGIのPOSTメソッドに対応。
・JPEGのリサイズを若干変更して取り込む。action=Resize のときだけリサイズ。
・libnkfのページが消えていることと、元にしたnkfが古そうなので使用を取り止める。
・libnkfの代替としてnkfwrapを作り、最新のnkf.cをそのまま利用できるようにした。
・MediaWizがHTMLのエンコードを知らない時(例:x-sjis)は、MediaWizのエンコードへ
  書き換えるように、プロクシの動作を変えた。
・HEX/CAP変換を、nkf に任せるように変更。(--cap-input)
・この時点のnkfは、2.04のCVS最新版(2.0.4 2004-12-01版)
・拡張子nuvに対応。MythTV用らしい。(thx tmtさん)
---------------------------------------------------------------------------
☆ wizd 0.12h RC1 (ごめんなさい、gt版のマージがまだです... だから RC。非公開)
・ちょっと微妙なBasic認証を搭載。(MediaWiz系からは意味がない?)
  User-Agentチェックに失敗しても、認証が設定されており合致したらアクセス許可。
・flag_daemon true のときにCGIが正常に動かなかったバグを修正。
  HTTP/1.0 から書かなきゃ動かなかったと言っていた人、これが原因です。スマソ。
・プレイリスト生成部分の内部実装を共通化し、若干変更。
  → ファイル数が多くても、AllPlayで正常に再生できます。たぶん。
・ディレクトリ時には拡張子パースしないように修正。(thx こーすけさん)
・JPEGをAllPlay対象に変更。(TYPE_JPEG追加。)
・libnkfの変換テーブル(utf8tbl.c)を差し替え。
・Cygwinでも動作できるように、FILENAME_MAX を WIZD_FILENAME_MAXに置き換えた。
  (FILENAME_MAXをURLの処理にも用いているので、不具合に…。とりあえず2048固定)
・（）「」カットの場所を変更。.tsvとmp3タグには無効になったハズ。
  これと関係してファイル名等をeuc型で保持するように、内部実装を結構変更。
・<!--WIZD_INSERT_CLIENT_CHARSET--> の追加。例は skin/basicblue/head.html に。
  client_language_code に応じて euc-jp もしくは Shift_JIS に置き換わる。
・Proxyの際に接続先に認証が必要な場合、playlist中のURLを書き換え。
・Cygwin用に、FYI/tools/symlink* を追加。(詳細後述)
---------------------------------------------------------------------------
☆ wizd 0.12g
・動作未確認だけど、ソース的には wizd 0.12f4 を完全に取り込んだ。
 これで .sv3 にも対応らしいです。すげぃ。
・skinにて、フォントの幅を元に表示ファイル名をカットするようにした(詳細後述)
・AVIの情報を表示可能にした(実験. FPS,duration,WxH,vcodec,interleave. 詳細後述)
  <!--WIZD_INSERT_LINE_AVI_FPS-->
  <!--WIZD_INSERT_LINE_AVI_DURATION-->
  <!--WIZD_INSERT_LINE_AVI_HVCODEC-->
  <!--WIZD_INSERT_LINE_AVI_VCODEC-->
  <!--WIZD_INSERT_LINE_AVI_HACODEC-->
  <!--WIZD_INSERT_LINE_AVI_ACODEC-->
  <!--WIZD_INSERT_LINE_AVI_IS_INTERLEAVED-->
・tsvでプロクシを使う際の微調整をした
・プロクシ時、相手に伝える Host: にポート番号がなかったので修正
・プロクシ時、SinglePlay などのリストも URL置換するようにした
・uri_encode の挙動を少し変更(space の + -> %20)
・行はCOLUMNじゃなくてROWですヨネ…。<!--WIZD_INSERT_LINE_ROW_NUM--> 追加。
・その他追加したタグ
  <!--WIZD_IF_PAGE_PREV--> <!--/WIZD_IF_PAGE_PREV-->
  <!--WIZD_IF_NO_PAGE_PREV--> <!--/WIZD_IF_NO_PAGE_PREV-->
  <!--WIZD_IF_PAGE_NEXT--> <!--/WIZD_IF_PAGE_NEXT-->
  <!--WIZD_IF_NO_PAGE_NEXT--> <!--/WIZD_IF_NO_PAGE_NEXT-->
  <!--WIZD_IF_STREAM_FILES--> <!--/WIZD_IF_STREAM_FILES-->
  <!--WIZD_IF_NO_STREAM_FILES--> <!--/WIZD_IF_NO_STREAM_FILES-->
  <!--WIZD_IF_LINE_IS_ODD--> <!--/WIZD_IF_LINE_IS_ODD-->
  <!--WIZD_IF_LINE_IS_EVEN--> <!--/WIZD_IF_LINE_IS_EVEN-->
・ID3タグの曲名が空のときは、ID3タグ情報を参照しないようにした
---------------------------------------------------------------------------
☆ wizd 0.12fb (些細な変更)
・SinglePlay が SVIとVOBで機能していなかったので修正
☆ wizd 0.12fa (patch; 些細な変更)
・拡張子置き換え処理が、大文字拡張子ではうまく機能していなかったので修正
---------------------------------------------------------------------------
☆ wizd 0.12f
・簡易CGI機能の搭載(GETメソッドのみ…)
・File Not Found 時に、/ へ Redirect するようにした
・クライアントの数を制限可能にした
・スキンに、クライアントがPCの場合とそうでない場合用のタグ追加
  (WIZD_IF_CLIENT_IS_NOT_PC, WIZD_IF_CLIENT_IS_PC. 意味に注意…)
・プロクシとCGIの実行許可をそれぞれ設定可能にした
・スキンに、日付・時刻・現在のディレクトリ名表示用のタグ追加
・.tsvによる仮想ディレクトリ中に、実在ファイル以外へのリンクも張れるようにした
・仮想ディレクトリ(.tsv)用のスキンを作成した。(line_pseudo.html)
・シャッフル機能を搭載 (?sort=shuffle)
・ディレクトリへのアクセスで、/ で終端してない場合には Location 送るようにした
・action=SinglePlay を MOVIEファイルの場合にも適用するようにした
・PCかどうかを判定するのに wizd.conf の user_agent_pc の値を利用するようにした
・ディレクトリ同名削除機能を1つの文字列に対し1度のみ適用するようにした
  例; test/testtest1.avi   old: test/1.avi   new: test/test1.avi
・document_root が おかしいときは 警告をだして終了
・ブラウザから ../../../../../etc/passwd等 にアクセスできるのを抑制したつもり
・BODYタグに onloadset を指定するためのタグと変数を追加した。(詳細は別記)
・行数を取得するタグ(WIZD_INSERT_LINE_COLUMN_NUM)を追加した。
・AAC(m4a) を wizd_param.c に追加した。(thx 371氏@Part8)
---------------------------------------------------------------------------
☆ wizd 0.12e (非公開?)
・wizd 0.12da の取り込みによって VOB の連続再生に対応、などなど。
・プロクシを利用する際に、強制的に User-Agent を変えることができる
・拡張子なしのファイルは非表示にした
・ファイルの日付表示を ファイルステータス修正時刻 から データ修正時刻 に変更
・.hnl -> .hnl.mpg を拡張子読みかえに追加
---------------------------------------------------------------------------
☆ wizd 0.12d以前 (オリジナル wizd 0.12 との違い)
・読み込みバッファのキャッシュ機能 (事の発端)
・プロクシ機能 (html書き換え機能付き)
・tsvファイルによる仮想ディレクトリ機能(AX10用?)
・PC用プレイリスト生成機能(mplayer, winamp用? 実験コード)
・MP3 ID3v2タグへの 簡易対応
・over 2G のファイルサイズ表示への対応(の修正)
・AVIファイルと同名のSVIがある場合はそちらの情報を表示
・SVIファイルの情報を表示する場合も [] () 削除が機能する
・m3uファイルとplwファイルがほぼ互換しているので m3uファイルも読み込む
・無視ディレクトリにWindowsの RECYCLER と System Volume Information を追加
・知らない拡張子のファイルを隠す際、拡張子無しのファイルも隠す
・プレイリストをallplayに含まない
・daemonではないとき、キャッシュの使用状況をプログレスバー表示
・SVIの over 2G のファイルサイズ取得がおかしくなりやすいので修正

***************************************************************************
スキンについて
***************************************************************************
  添付してある basicblue は、wizd 0.12用として添付されているものに多少手を加えてあります。
---------------------------------------------------------------------------
添付してある basicblueスキンの、wizd 0.12用からの違い…
・MediaWizの新しいファームウェア(2003/12/24版)のフォントに合わせて調整した。
  ＊ head.html の font-size を 10px から 12px にした。(thx, 251氏@Part7)
  ＊ nowrap を入れて改行を抑制した。
  ＊ 日付・サイズ・タイトルのフォントの指定をわけた。
・PgUP/PgDown の動作を逆にした。(賛否両論あろうかと思いますが… 嫌なら戻してね)
・SVIファイルのときはSVIの情報そのものを出力。
  (このスキンを使う時は flag_filename_cut_parenthesis_area は true がおすすめ)
・wizd_skin.conf の menu_svi_info_length_max を設定。(40文字)
・MP3のタグ間違い修正(wizd 0.12daより)
・WIZD_IF_CLIENT_IS_PC と WIZD_IF_CLIENT_IS_NOT_PC を用いて、PCの場合には
  スタイルシートで背景と文字を合わせるようにした。(wizd 0.12f)
・時刻や現在のディレクトリ等を最下行に表示するようにした。(wizd 0.12f)
・履歴の代わりにシャッフル機能へのリンクにした。(wizd 0.12f)
・MediaWiz内部の履歴の表示をできるようにした。(wizd 0.12f)
・連続再生のフォーカスを外し、疑似スクロール機能(別記)を実装した。(wizd 0.12f)
・ストップボタン(tvid=ESC)で、/cgi-bin/page_change.cgi を呼ぶようにした。
  添付の page_change.cgi をその場所に適切に設置すれば ページ番号指定で
  直接ページ変更ができるようにした。但し perl 必須。(wizd 0.12f)
・charset=<!--WIZD_INSERT_CLIENT_CHARSET--> を head.htmlに追加。(wizd 0.12h)

・てか、そろそろ何変えたかわからなくなってきた… orz

***************************************************************************
Cygwinについて(wizd 0.12h)
***************************************************************************
  wizd は Cygwinでも動作します。
  Cygwinで使わない場合は無視してください。

  - コンパイル
  Cygwin環境にgcc等の開発環境を入れておけば、たぶん make で作成できるでしょう。
  Cygwinバイナリを実行するときは、cygwin1.dll を忘れずに。
  (strip が失敗するでしょうが、気にしないように。)
  実行バイナリを配布したかったのですが、GPLにしないと配布はできないかもなので
  念のため、Cygwin版の実行バイナリは配布しないでください。

  - シンボリックリンク
  普通のUNIX環境もしくはCygwinがインストールされている環境では、
  ln -s /mnt mnt といったコマンドでシンボリックリンクを作成できます。
  これをwizdのドキュメントルートで行うことで、別のディレクトリや別のディスク上
  のファイルを表示できるのですが、この作業を行うのは結構面倒です。
  (特に、Windowsのドライブレターを /cygdrive/c/WINDOWS/... で指定するのが。)
  そこで、FYI/tools/symlink.c を用意しました。
  Cygwin環境で make してください。
  まず、作成した symlink.exe と cygwin1.dll を同一ディレクトリに置きます。
  そしてこの symlink.exe に Windowsから CD-ROMドライブやフォルダ等のアイコンを
  ドラッグ&ドロップすると Cygwin用のシンボリックリンクが作成されます。
  Windows側からはショートカットに見えているはずです。
  これをそのままwizdのドキュメントルートに移動させると、
  wizdからそのリンク先にアクセスできます。
  ただし、Win標準の「ショートカットの作成」ではできませんのでご注意ください。

  - 使い方
  実行バイナリは配布できませんが、個人で作成したバイナリを使用する際、
  *exe と cygwin1.dll (と、JPEG関連入れてるならそれ用のDLLs) があれば、
  Cygwin環境そのものが無くても wizd は正常に動作します。

***************************************************************************
フォントについて(wizd 0.12g)
***************************************************************************
  MediaWiz で同梱のbasicblueを使うと、というより、普通のフォントを使うと、
  メニューで表示される英文字はそれぞれ等幅にはなりません。

  以前のwizdで同梱のbasicblueを使用すると、WWWWWWWWWWWWWWWWWWWW.avi という
  ファイルを置くだけで表示が崩れていました。
  また、iiiiiiiiiiiiiiiiiiiiiiiiiiiiiあいうえお.avi のようなものは、
  いくら右に余白があってもファイル名の文字数だけで切られるため、
  完全には表示できませんでした。

  そこで、特定の状況下のMediaWizのフォント情報を手作業で調べてみました。
  このデータを使うと、その特定の状況下では確実に特定の位置で文字を切れます。

  特定の状況下、と言った理由は、MediaWiz でもフォントのサイズを変更したり
  bold にしなかったりすると、フォントの情報が変化してしまいました。
  まして MediaWiz 以外がどのようなフォントを使用しているかはわかりません。
  そこで、skinの定義ファイルにて、使用するフォントの情報を設定できるように
  してみました。
  但し、覚悟してください。調べるのも、設定するのもかなり大変です。

  面倒だから以前のように文字数だけで切りたい場合には、以前の通り記述して
  いただければ大丈夫です。

  実際にこの調べた情報は、同梱のbasicblueに適用してあるので、
  wizd_skin.conf を見てください。

  では、skinでの実際の設定の説明です。

  menu_font_metric 10
  menu_font_metric_string aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaiehlkpneggikfiehkgkkkkkkkkefkkkkrolnmllnlejlkmknlnmmmlosoonfhfimglkkkkikkefkeokkkkhjikkokkjgegka

  menu_font_metric_string は、256文字分、記述できます。
  例では、128文字分記述しています。(残りは 0 で埋まります)

  先頭の1文字目では 文字コード 0x00 の幅を設定し、次の1文字では
  文字コード 0x01 の幅を設定します。
  a は 幅0 を意味し、b は 幅1 を意味します。z は 幅26 です。それ以上はムリ。

  menu_font_metric は 幅が無指定の際に使われるデフォルトの幅です。
  漢字 0.5文字分相当の数字だと思ってください。
  ちなみに、漢字の幅が等幅でなければ、この設計は破綻します。
  半角カタカナは考慮してません。結構おかしくなると思います。

  とりあえず、使用したサンプルファイルを同梱しておくので気になる人はどぞ。
  ( FYI/font/* )
 
***************************************************************************
AVI情報について(wizd 0.12g)
***************************************************************************
  毎回のことですが、適当に実装してるので不具合あったら教えてください。

  現在取得できる情報は、以下のとおりです。
  ・再生時間(duration)
  ・FPS(Frames per sec)
  ・ビデオ/オーディオ コーデック情報
  ・動画のサイズ(Width x Height)
  ・動画と音声が本当にインターリーブされて配置してあるかの判定結果

  これらは基本的にAVIのヘッダに記録されている情報です。
  以下のように置換されます。
  WIZD_INSERT_LINE_AVI_FPS             -> 23.976
  WIZD_INSERT_LINE_AVI_DURATION        -> 0:23:44
  WIZD_INSERT_LINE_AVI_HVCODEC         -> DX50
  WIZD_INSERT_LINE_AVI_VCODEC          -> divx
  WIZD_INSERT_LINE_AVI_HACODEC         -> MP3
  WIZD_INSERT_LINE_AVI_ACODEC          -> null

  HVCODEC および HACODEC は AVIヘッダ(strh)の情報です。
  VCODEC および ACODEC は AVIヘッダ(strf)のBITMAPINFO/WAVEFORMATEXの情報です。
  ここら辺の表示のされ方や書き方は将来変わるかもしれません。

  ちなみに 動画のサイズ(Width x Height)は、
    WIZD_INSERT_LINE_IMAGE_WIDTH および WIZD_INSERT_LINE_IMAGE_HEIGHT
  に入ります。


  …さて、ここで最も重要で異種なものは、インターリーブの判定です。

  現在のファームウェアでは、というより現在の仕様ではどうしても、
  画像と音声のデータが適度に細切れに(つまりインターリーブで)配置されていないと、
  先に画像が再生されあとで音声のみ再生されるというような動作をしてしまいます。

  AVIのヘッダに、一応インターリーブされているかを示すフラグがあります。
  が、ほとんどだれも使っていないようです(´・ω・`)
  そこで、AVIのmoviチャンク内のデータの配置を100個程度調べることにより、
  判定してみました。
  その100個ともに同じデータの種類(動画など)がならんでいたら、
  インターリーブされていないと判定する仕組みです。
  ですので、稀に誤判定があることを御承知ください。

  ちなみに以下のように置換されます。
  WIZD_INSERT_LINE_AVI_IS_INTERLEAVED  -> I か NI か ?
    I は インターリーブされていることを示します。
    NI は インターリーブされていないことを示します。(再生すると音ナシ等に)
    ? は 不明。(壊れたファイルとか?)

  
  当然ですが、これらは基本的に拡張子が.AVIのときのみ動作します。
  AVIでない場合や情報が読めなかった場合、それぞれのタグは
  ??:??:?? などに置換されます。(CODEC類 は [none])
  例外として、AVIでないとき VCODEC は 拡張子に置換されます。
  なぜなら、その方がわかりやすいから（笑      (例; [mpg] や [wmv])

  おすすめ(?)設定
    ちょっと見づらいかもしれませんが、とりあえず Just for your information.
    line_movie.html の日付部分を…
---------
	<td nowrap class="date" colspan=2>
		<!--WIZD_INSERT_LINE_AVI_HVCODEC-->:<!--WIZD_INSERT_LINE_AVI_VCODEC--> (<!--WIZD_INSERT_LINE_AVI_HACODEC-->:<!--WIZD_INSERT_LINE_AVI_ACODEC-->) &nbsp;[<!--WIZD_INSERT_LINE_AVI_IS_INTERLEAVED-->]&nbsp;<!--WIZD_INSERT_LINE_IMAGE_WIDTH--> x <!--WIZD_INSERT_LINE_IMAGE_HEIGHT-->
	</td>
---------

  今後の課題(というより自分メモ):
    ・wmvやmpgの情報も取得したい。
      ………複雑すぎてかなり面倒ヽ(`Д´)ノ
    ・HVCODEC と VCODEC (Aも) が 同じときは 片方だけの表示になる タグ追加する?
    ・もちょっと取得できる情報増やしたいなぁ

***************************************************************************
CGIについて(wizd 0.12f)
***************************************************************************
  まぁいつもの事ですが、適当に実装しました。
  AX10USER氏がファイル実行を行ないたいとのことで、熟考した結果
  CGIを実装して提供することになりました。
  これにより、特定のスクリプト実行を埋め込むよりは汎用性があがるはずです。
  つまり、普通のCGIなハズなのである程度、自由になんでもできるはずです。
  なんか変な動作したら教えてください。
  今のところ GET のみです…。
  しかも、(QUERY_STRINGで)扱えるデータはあんまり長くありません。注意…。

  現在、.cgi ファイルは ファイルリストには出していませんので直接URLを入力して
  (or htmlに書いてそこから)実行してください。
  CGIファイルには実行許可を与えてください。(man chmod)
  ファイル削除等の操作系をCGIで記述/実行するときは、いろんなセキュリティに
  気をつけてください。例を挙げると、delete_file.cgi?file=hoge.avi のときに
  delete_file.cgi?file=../wizd.conf や、show_file.cgi?file=hoge.txt のときに
  show_file.cgi?file=../../../../../../../etc/passwd などなどを実行されたら
  (or間違えて?やったら)マズいです。wizd側では対策しません(できません)。

  環境変数はメジャーなものはある程度実装したと思うので、活用してください。
  PATH は、標準的なものにリセットされるため、/usr/local/bin/ などにある
  プログラムを使う場合などはフルパス表記をおすすめします。

  また、CGIプログラムが動画データを吐き出す場合、普通にリンクすると拡張子が
  .cgi となり、動画と認識してくれません。そこで、
  "play_mpeg.cgi?start=100&file=dummy.mpg" のように、最後が .mpg などの
  MediaWizが認識できる引数を指定してください。あと、vod="0" も お忘れなく。
  しかし、この動作は 現在の MediaWizのファームウェアに依存していますので、
  変更があった場合、これではうまくいかなくなる可能性があります。
  また、他の機種で動作しない可能性もあります。
  そのときは別の方法を実装しますので、御一報ください。
  ("別の方法" は 美しくなくなるのでやりたくないのですが。)
  (Content-type で切り分けてくれれば良かったのに、と残念でなりません)

  利用例)
   ・クライアントがPCかどうかを判別できるタグを追加したので、組み合わせて
    PCから閲覧したときはボタンをリストに表示して、押すとビットレート変換や
    ファイルの操作
   ・DVD読み込みプログラムを呼び出して(例; libdvdreadのplay_title)DVDの再生

  既知の問題
   ・手抜きなので、呼び出されたCGIプログラムがヘッダを空行で終わらせない限り、
    すべてのデータをヘッダとしてクライアントに送出してしまうので、注意。

***************************************************************************
クライアント数の制限について(wizd 0.12f)
***************************************************************************
  wizdは接続要求に対して fork() を実行するので、アクセスが多いと自身のコピー
  が大量に発生します。DoS状態になるかもしれません。
  組み込み環境などでメモリが少ない時が一番マズいと思います。
  特に、プロクシをIEから使ったりして、プロクシ先のページに画像が大量にある
  場合にはその読み込みが並列に発生してしまうので、こういう事態になるでしょう。
  現に、AX10 でこれをやると AX10が落ちたという報告がありました。

  そこで、接続受け入れの fork() の前に、制限をかけられるようにしました。
  これでAX10では落ちなくなったそうです ;-)

  これもあんまりテストしていないので、不具合があったら教えてください。

***************************************************************************
仮想ディレクトリについて (wizd 0.12f)
***************************************************************************
  wizd 0.12d までの .tsv による仮想ディレクトリでは、その中に記述できる
  ファイルは、実在し かつ wizd が認識できる拡張子である必要がありました。
  しかし、wizd 0.12f から その制限を外しました。
  これにより、外部ページへのリンクや CGIへのリンクを手軽に作成できます。

  ファイルの形式は、通常の Tab Separated Values(TSV)形式のファイルです。
---- サンプル
somewhere/somefile.mpg[TAB]0[TAB]表示される名前[改行]
http://www.example.com/[TAB]0[TAB]うぇぶぺーじ[改行]
/-.-http://www.example.com/[TAB]0[TAB]ぷろくし[改行]
-------------
  1番目のフィールドは リンク先のアンカーを指定します。
  2番目のフィールドは TVIDを指定しますが、wizd では無視します。
  3番目のフィールドは 画面上に表示される名前を指定します。

  ファイルが実在すればその情報を元に通常の処理が行なわれます。
  例; ファイルサイズ、ファイル更新日時表示、mp3のタグ情報読み込み等
  ファイルが実在しなくても、アンカーの拡張子を判断し、通常の vod 付加や
  SiglePlay モードの設定などが行なわれます。

  既知のバグ
  ・SVI や mp3 などの名前変換の処理が入る場合には名前指定が上書きされる。
  ・手抜きなのでリンク先のアンカーが絶対パス指定だと別のファイルの情報を
    読む可能性がある。というより、大抵 正しくフルパスを生成できない。
  ・リンク先が通常の http:// 形式のリンクの場合、相対指定としてファイルを探し
    もしそれが実在すればそのファイルの情報を表示してしまう（笑

  やっぱりこれもあんまりテストしていないので、不具合があったら教えてください。

***************************************************************************
BODYタグの onloadset と、focus変数について(wizd 0.12f)
***************************************************************************
  この機能は、基本的には ファイルリスト上で 疑似スクロールを実現するための
  ものです。添付の basicblue では、最上行で上キーを押すと前ページの最下行に、
  最下行で下キーを押すと次ページの最上行に移動するようになっています。
  (情報 thx 104氏@Part8)

  これを実現するために、?focus= という変数を追加しました。
  これを指定していると、WIZD_INSERT_ONLOADSET_FOCUS タグに、
  onloadset="$focus" が代入されます(ここで $focus は focus= の右辺値)
  指定されていないときは そのタグは空になります。(削除されます)

  しかし、実際にやってみると、直接ディレクトリを指定した場合に困ったので
  WIZD_IF_FOCUS_IS_SPECIFIED と WIZD_IF_FOCUS_IS_NOT_SPECIFIED タグを追加し
  BODY タグを囲むことでデフォルトの onloadset を定義できるようにしました。
  詳細は basicblue を見てください。

  さらに、原案は ファイルリストの最上行と最下行にのみ start, end という
  A NAME が指定されるというものでしたが、wizd では line_*.html を場合によって
  書き換えるのは難しいという点と美しくないという点から、次のタグを追加し、
  それによって より汎用的に同じことを実現しました。
  その追加した WIZD_INSERT_LINE_COLUMN_NUM タグは、単に画面上での何行目で
  あるかを返します。最上行は 1 です。添付 basicblue ではこれを用いて
  name="L<!--WIZD_INSERT_LINE_COLUMN_NUM-->" というのを Aタグに追加しています。
  こうすると、各行に name=L1 〜 L13 (13はwizd_skin.conf の page_line_max) が
  付き、それが名前になります。
  これで、focus=L1 で最上行を、focus=L13 で最下行を指定することができます。
  そしてこの指定をしたページ移動のリンクを、最上行より1つ前と最下行の1つ次に
  Aタグで onfocusload と共に配置することで、疑似スクロールが実現されています。

  ちなみに、WIZD_INSERT_LINE_COLUMN_NUM を 各line_*.html の tvid のところに
  指定すると、ページ上で何番目のファイル、というTVIDで入力できるので、
  こちらが好きだという人は、そう書き換えると良いでしょう。
 
***************************************************************************
キャッシュバッファについて
***************************************************************************
  ファイルの転送は、オリジナルの wizd とは異なった実装をしています。
  この部分(とプロクシ)が wizd改造版の メイン機能です。

  このキャッシュバッファでは、10240バイト(10KB)のブロックを基本とし
  そのブロックを複数集めて1つのキャッシュとしています。
  wizd.conf の buffer_size によって、この個数を調整できます。
  例えば ブロックが 100 あるとすると、キャッシュは 100 * 10KB = 1000KB です。
  デフォルトは 1024 です。つまり、10MB 確保します。
  メモリの少ない環境や、組み込み環境(例AX10)等では、少なくしてください。

  オリジナルのwizdと同程度のサイズを確保したいなら、13 に設定してください。
  方式が違うのでまったく同じ動作とはなりませんが、大体同じになるはずです。

  現在は、キャッシュを持ったブロックが 全ブロック数の 1/4 貯まれば再生を始める
  ようになっています。
  よって、実際に再生されるまでに多少時間がかかってしまうことがありますが、
  1) buffer_size を 減らす
  2) flag_buffer_send_asap を true にしてみる(非推奨)
  などを行なってみてください。
  逆に、途中で止まる場合は buffer_size を増やしてみてください。
  ファイルによってはデコードエラーで同じような現象に見舞われることもあります。
  キャッシュの使用具合を画面に表示することができるので、それで確認しながら調整
  するのがいいと思います。
  表示するには、wizd.conf にて flag_daemon を false にしてください。
  また併せて、debug_log_filename /dev/tty とし、flag_debug_log_output を
  true に設定するとわかりやすいかもしれません。
  (クライアントが複数のときは表示が崩れます。ご注意ください。)

  このバッファは、ネットワーク(プロクシ,NFS等)/CDROMなどの遅いデバイスから
  読み込む際に、特に威力を発揮します。
  なので、高速な読み込み環境であると断言できる(ローカルHDDからしか読まない)
  場合には、あまり意味がありません。
  バッファを大きくとりすぎると、ローカルでも再生に遅延が生じたりしますが、
  問題になることは少ないでしょう。

  注) SVIファイルの動画のキャッシュバッファによる転送はまだ作ってません。

***************************************************************************
プロクシ機能の使いかた
***************************************************************************
  (もちろん URLボタンから リモコンで入力でもいいですが、それよりは)
  次のような html を用意し、wizd の root ディレクトリに置き、
  MediaWiz に読ませます。(もちろん example.org は例なので、下のは実在しないよ)
---
  <A HREF="/-.-http://www.example.org/sample.avi" vod="0">sample.avi</A><BR>
  <A HREF="/-.-http://www.example.org/dir/">dir list @ example.org</A><BR>
---
  こうすることで、wizd が代わりにデータを取得しながら MediaWiz側へデータを
  転送するので、バッファキャッシュの恩恵を受けることができます。

  2番目のディレクトリリストの例では、受け取る HTML 中の A HREF〜リンクを
  wizdのプロクシが 拡張子によって書き換えるので、例えば .avi ファイルが
  リストに含まれる場合、自動的に vod="0" がつきます。
  また、PCからのアクセス(*)の場合はさらに、/-.-playlist.pls?http への
  書き換えを行ないます。(詳しくは後述)

  また、このプロクシでは(MediaWizが対応してくれない)Basic認証を使えます。
---
  <A HREF="/-.-http://user:passwd@www.example.org/sample.avi" vod="0">sample.avi</A><BR>
  <A HREF="/-.-http://user:passwd@www.example.org/dir/">dir list @ example.org</A><BR>
---
  先程の例だと、このように指定してください。
  パスワードが html に埋まることになるので、運用には注意してくださいね。

  注) 厳密な書き換え処理をしていないので、htmlの書式やネットワークから
  のhtmlファイルの転送状況によっては、うまくいかない場合があります。

***************************************************************************
おまけ
***************************************************************************

PC用プレイリスト機能
  以下の作業を行なうことで、PC上でも動画/音声を wizd から楽しめます。
  注!) あくまで実験なので、よくわからない人は使わないでください。

  PCからのアクセス(*)の場合、wizd が生成するメニュー画面において、
  vod="0"がつくような 動画/音声ファイルは、PCからも閲覧できるように
  リンクが /-.-playlist.pls?http://... という形式になります。
  これにアクセスすると、audio/x-scpls タイプで、Winampのpls形式の
  ファイルを生成して送ってくれます。

  *) 現状では "PCからのアクセス"かどうかは、User-Agent が user_agent_pc の値
    かどうかで行なわれます。

  これにより、Winampプレイリストに対応したプログラムを ブラウザの PLS か
  audio/x-scpls に関連づけることにより、動画/音声を楽しめるでしょう。

  Winamp では、動画だとうまくいかなかったので ちょっと残念…。

  /-.-playlist.pls?http://... という形式自体は MediaWiz等からもアクセスできる
  はずです。まだ実験してませんが、もしかするとネットラジオを利用するときに
  有効に使えるかもしれません。報告お待ちしております。
  関連) http://pc.2ch.net/test/read.cgi/avi/1071203538/405-413n
------------------
追記; wizd 0.12f
  MediaWiz は URLの最後の拡張子でファイルの種類を判別するため、以前の実装では
  うまくいかないことがわかりました。そこで wizd 0.12f では、playlist で
  生成したい URL の末尾に .pls を付け加えることを許可し、wizd がこれを削除
  することによって、うまくいくようにしてみました。
  例)
   http://64.236.34.97:80/stream/1005 にアクセスするとデータが流れてくる場合
     /-.-playlist.pls?http://64.236.34.97:80/stream/1005.pls
   (生成されるURLは http://64.236.34.97:80/stream/1005)
   さらに、次のようにすると wizd のプロクシ機能を使うことができます。
     /-.-playlist.pls?/-.-http://64.236.34.97:80/stream/1005.pls
   (生成されるURLは http://サーバ:8000/-.-http://64.236.34.97:80/stream/1005)
------------------

-----
  ・mplayer の例
  というわけで ここでは Win2k 上 で mplayer(win32版) と IE を用いた
  設定を紹介します。UNIXな人はこの説明から自分でアレンジできるでしょうから
  がんばってください。;-)
  また、よくわからないという人はやめておいてください。


  まず、mplayer(win32版) を ダウンロードしてください。
  ちょっとサイズが大きめです。
> ftp://ftp.mplayerhq.hu/MPlayer/releases/win32-beta/mplayer-mingw32-1.0pre3.zip
  そして、このファイルを展開し、適当な場所に置きます。
  ここでは C:\mplayer\mplayer.exe となるようにしたと仮定します。

  次に、拡張子 PLS の関連づけを変更します。
  (この意味がわからないならあきらめてください。危ないです)
  (まぁ慣れた人には単純な話ですが)

  フォルダオプションのファイルタイプから、拡張子 PLS を選び、詳細設定を
  開いてください。
  元に戻す、となっている場合は それを押して 戻すと詳細設定がでます。
  PLS が無い場合は新規に作ってください。

  詳細設定を開くと、open や play といったものがあるかと思います。
  次に、現在の設定を変更するので、戻せる自信のある人だけ進めてください。
  さて、他は削除して open(なんでもいい) 一つにしてください。
  そして、その残したもの(open)を、編集します。
  関連づけるアプリケーションに (つまり、ここが本質)
   C:\mplayer\mplayer.exe -playlist "%1"
  と入れます。(参照押して選んで、追記するのがいいですね。)

  以上で、拡張子 pls に、mplayer が関連づけられたはずです。

  さて、この状態で IE を新規に開いて(そうしないと反映されない…)
  wizd のアドレスにアクセスしてみてください。

  そのあと、/-.-playlist.pls?http... となっている avi ファイルかなにかを
  クリックします。
  そうすると、DOS窓が開き mplayer が 再生してくれるはずです。

  mplayer だと、MediaWiz のように AVI でも再生してくれますよね。
  (WindowsMediaPlayer では 全部 ローカルに持ってこようとする)
  (さすがに non-interleaved だと だめかも)
  MPEG4v3 とかでも 再生できるので、まぁ、お遊び程度に楽しんでみてください。

  ちなみに、mplayer のフルスクリーンは キーボードの f キーです。
  Alt+Enter じゃないので注意 ;-)
  抜けるには q です。
  本来 早送り、巻き戻しは ←→キーですが、mplayer はストリーム上での
  早送り、巻き戻しに対応していませんので、この場合使えません。

  これが、今 私の知ってる PC を使った MediaWiz風 設定ですが、
  こうしてみると MediaWiz が如何にすばらしいか わかりますね :-)
-----
